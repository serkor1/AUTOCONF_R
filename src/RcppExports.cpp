// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// iota
Rcpp::IntegerVector iota(const int& x);
RcppExport SEXP _autoconf_iota(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(iota(x));
    return rcpp_result_gen;
END_RCPP
}
// checkOpenMP
Rcpp::List checkOpenMP();
RcppExport SEXP _autoconf_checkOpenMP() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(checkOpenMP());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_autoconf_iota", (DL_FUNC) &_autoconf_iota, 1},
    {"_autoconf_checkOpenMP", (DL_FUNC) &_autoconf_checkOpenMP, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_autoconf(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
